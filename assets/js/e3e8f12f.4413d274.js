"use strict";(self.webpackChunkrostar_docs=self.webpackChunkrostar_docs||[]).push([[717],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(r),m=n,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return r?a.createElement(f,l(l({ref:t},c),{},{components:r})):a.createElement(f,l({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6365:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const o={title:"Regular use",sidebar_position:4},l=void 0,i={unversionedId:"regularUse",id:"regularUse",title:"Regular use",description:"The regular work cycle in a fully managed Rojo project generally involves the following steps:",source:"@site/docs/regularUse.mdx",sourceDirName:".",slug:"/regularUse",permalink:"/Rostar/docs/regularUse",draft:!1,editUrl:"https://github.com/tacheometry/Rostar/tree/main/packages/create-docusaurus/templates/shared/docs/regularUse.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Regular use",sidebar_position:4},sidebar:"mainSidebar",previous:{title:"Project setup",permalink:"/Rostar/docs/projectSetup"},next:{title:"Rojo-first workflow",permalink:"/Rostar/docs/Workflow guides/rojoFirst"}},s={},p=[{value:"Extracting instances from a place",id:"extracting-instances-from-a-place",level:2},{value:"Extracting models only",id:"extracting-models-only",level:3},{value:"Extracting scripts only",id:"extracting-scripts-only",level:3},{value:"Building the place file",id:"building-the-place-file",level:2},{value:"Tips",id:"tips",level:2}],c={toc:p};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The regular work cycle in a fully managed Rojo project generally involves the following steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Save the place file"),(0,n.kt)("li",{parentName:"ol"},"Unpack the place file into different models"),(0,n.kt)("li",{parentName:"ol"},"Build or serve the place file with Rojo"),(0,n.kt)("li",{parentName:"ol"},"Repeat")),(0,n.kt)("p",null,"With Rostar, this process is the same, but is much simpler to execute."),(0,n.kt)("h2",{id:"extracting-instances-from-a-place"},"Extracting instances from a place"),(0,n.kt)("p",null,"To extract models and/or scripts from a place file, the following command is used:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"rostar unpack ./Path_To_Place_File.rbxl\n")),(0,n.kt)("p",null,"or to extract from a place id:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"rostar unpack 12345678\n")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"If unable to extract from a place id, Remodel might not be able to authenticate properly. In some cases, a ",(0,n.kt)("inlineCode",{parentName:"p"},"REMODEL_AUTH")," environment variable might need to be set. For example (on Linux and MacOS):"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'export REMODEL_AUTH="<Insert Roblox cookie>"; rostar unpack <Place id>\n')),(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/rojo-rbx/remodel#Authentication"},"See more info on Remodel's repository."))),(0,n.kt)("p",null,"By default, the unpack command generates a folder structure that tries to replicate the structure of the Roblox DataModel. ModuleScripts, LocalScripts, and Scripts are placed in ",(0,n.kt)("inlineCode",{parentName:"p"},".lua")," files (wherever possible), and other instances are placed in rbxm or rbxmx files."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"\nDataModel/\nServerScriptService/\nCode/\ninit.server.lua\nsomeModule.lua\nReplicatedStorage/\nShared/\nsomeModule.lua\nServerStorage/\nsomeModule.lua\nWorkspace.rbxm\nLighting.rbxm\nSoundService.rbxm\n...\n\n")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"By using ",(0,n.kt)("inlineCode",{parentName:"p"},"--assets-directory <Folder name>")," as an argument to the command, scripts and model files can be in separate directories.")),(0,n.kt)("h3",{id:"extracting-models-only"},"Extracting models only"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"rostar unpack ./Path_To_Place_File.rbxl --no-lua\n")),(0,n.kt)("p",null,"If Rostar is only used for extracting models, ",(0,n.kt)("inlineCode",{parentName:"p"},"--no-overwrite-project")," should be used as well for preserving the existing script paths. Edits to the project file might be needed if new directories are added. More on this in the ",(0,n.kt)("a",{parentName:"p",href:"../Workflow%20guides/rojoFirst"},"Rojo-first workflow")," article."),(0,n.kt)("h3",{id:"extracting-scripts-only"},"Extracting scripts only"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"rostar unpack ./Path_To_Place_File.rbxl --no-models\n")),(0,n.kt)("h2",{id:"building-the-place-file"},"Building the place file"),(0,n.kt)("p",null,"The place file can be generated by running:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"rostar pack OutputPlaceFile.rbxl\n")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("inlineCode",{parentName:"p"},"rostar pack")," can be run by itself if a file named after the ",(0,n.kt)("inlineCode",{parentName:"p"},"name")," property from the project file should be outputted.")),(0,n.kt)("p",null,"This is virtually equivalent to running:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"rojo build --output OutputPlaceFile.rbxl\n")),(0,n.kt)("h2",{id:"tips"},"Tips"),(0,n.kt)("p",null,"To run a command every time your place file changes, the ",(0,n.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/nodemon"},(0,n.kt)("inlineCode",{parentName:"a"},"nodemon"))," utility package can be used. After installing it with ",(0,n.kt)("inlineCode",{parentName:"p"},"npm i -g nodemon"),", it can be set up so unpacking runs every time the place file changes:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"nodemon -w StudioPlace.rbxl --exec rostar unpack StudioPlace.rbxl\n")))}u.isMDXComponent=!0}}]);